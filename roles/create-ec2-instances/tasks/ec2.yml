---
- name: Create master EC2 instance
  ec2:
    key_name: "{{ key_name }}"
    region: "{{ region_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_id }}"
    vpc_subnet_id: "{{ random_subnet }}"
    group: "{{ instance_name }}-sg"
    wait: yes
    instance_tags:
      Name: kubernetes-master
      Env: sandbox
    count_tag: 
      Name: kubernetes-master
      Env: sandbox
    exact_count: 1
    assign_public_ip: yes
  register: ec2
    
    
- name: Add the newly created EC2 instance(s) to the local host group
  lineinfile:
    path: "inventory/ec2"
    regexp: 'host1'
    insertbefore: '# master nodes of the cluster'
    line: "{{ item.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=keys/{{ key_name }}.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no' ansible_python_interpreter='python3'"
  with_items: "{{ ec2.instances }}"

- name: Create worker EC2 instances
  ec2:
    key_name: "{{ key_name }}"
    region: "{{ region_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_id }}"
    vpc_subnet_id: "{{ random_subnet }}"
    group: "{{ instance_name }}-sg"
    wait: yes
    instance_tags:
      Name: kubernetes-worker
      Env: sandbox
    count_tag: 
      Name: kubernetes-worker
      Env: sandbox
    exact_count: "{{ worker_node_count }}"
    assign_public_ip: yes
  register: ec2

- ec2_instance_info:
    filters:
      "tag:Name": kubernetes-worker

- name: Add the newly created EC2 instance(s) to the local host group
  lineinfile:
    path: "inventory/ec2"
    regexp: 'host2'
    insertbefore: '# worker nodes of the cluster'
    line: "{{ item.public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=keys/{{ key_name }}.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no' ansible_python_interpreter='python3'"
  with_items: "{{ ec2.instances }}"
